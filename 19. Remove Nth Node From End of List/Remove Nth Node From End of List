/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) 
    {
        ListNode* current;
        if(head->next==nullptr){
            head=nullptr;
            return head;
        }
        ListNode* ptr;
        ListNode* prev;
        int count = 0;
        current = head;
        while (current != nullptr ) 
        {
            current = current->next;
            count++;
        }

        int target=count-n;
        count=0;
        ptr=head;
        prev=head;
        while (ptr!=nullptr && count!=target) 
        {
            prev = ptr;
            ptr = ptr->next;
            count++;
            if(count==target){
                break;
            }
        }
        if(count==0){
            head=head->next;
        }else{
        prev->next = ptr->next;
        }
        delete ptr;

        return head;
    }
};
