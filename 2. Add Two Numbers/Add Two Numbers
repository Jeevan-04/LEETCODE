/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ptr1 = l1;
        ListNode* ptr2 = l2;
        ListNode* sum = new ListNode();
        ListNode* current = sum;
        int carry = 0;
        while (ptr1 != nullptr || ptr2 != nullptr || carry != 0) {
            int val1 = (ptr1 != nullptr) ? ptr1->val : 0;
            int val2 = (ptr2 != nullptr) ? ptr2->val : 0;
            int sumVal = val1 + val2 + carry;
            carry = sumVal / 10;
            sumVal %= 10; 
            current->next = new ListNode(sumVal);
            current = current->next;
            if (ptr1 != nullptr) ptr1 = ptr1->next;
            if (ptr2 != nullptr) ptr2 = ptr2->next;
        }
        return sum->next; 
    }
};
