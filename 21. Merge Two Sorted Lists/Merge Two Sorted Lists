/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        vector<int>arr;
        ListNode *ptr = list1;
        while(ptr != nullptr) {
            arr.push_back(ptr->val);
            ptr = ptr->next;
        }
        ListNode *ptr2 = list2;
        while(ptr2 != nullptr) {
            arr.push_back(ptr2->val);
            ptr2 = ptr2->next;
        }
        sort(arr.begin(), arr.end());
        ListNode*new_arr=new ListNode(-1);
        ListNode*current=new_arr;
        for(int val : arr) {
            current->next = new ListNode(val);
            current = current->next;
        }
        return new_arr->next;
    }
};
